#! /usr/bin/env python3

import subprocess

# COLORS VARIABLE

PURPLE = '\033[95m'
BLUE = '\033[94m'
CYAN = '\033[96m'
GREEN = '\033[92m'
YELLOW = '\033[93m'
RED = '\033[91m'
NC = '\033[0m'
BOLD = '\033[1m'
UNDERLINE = '\033[4m'


def execute(section, commands, base, ignore):
    splitted = commands.split(" ")
    if ignore == True:
        if base == "debian":
            splitted.append("-y")
        else:
            splitted.append("--noconfirm")

    print(f"{YELLOW}{section}{NC}")
    try:
        subprocess.run(splitted, check=True, stdout=subprocess.DEVNULL)
    except Exception as err:
        print(f"{RED}Error when installing some packages, please retry{NC}")


title = f"""{PURPLE}*AETHER DOTFILES INSTALLER*
INSTALLER BY ilham25{NC}"""
selectText = """
Select your linux base :
1. Debian Based (Ubuntu, Linux Mint, KDE Neon, Elementary OS, etc)
2. Arch Based (Artix, Archcraft, Archlabs, Manjaro, etc)
"""


def dotfiles():
    print(f"{GREEN}INSTALLING DOTFILES CONFIG{NC}")
    execute("Creating temporary directory", "mkdir tmp", "", False)
    execute("Clone dotfiles-aether ",
            "git clone https://github.com/ilham25/dotfiles-aether", "", False)
    execute("Copy all dotfiles config to home directory",
            "cd dotfiles-aether/ && cp -r {.*,*} ~/", "", False)
    execute("Installing custom icon", "cd ~/.icons/", "", False)
    execute("--", "tar -Jxvf oomox-aesthetic-light.tar.xz && tar -Jxvf oomox-aesthetic-dark.tar.xz", "", False)
    execute("-- Copy all custom icons to /usr/share/icons directory",
            "sudo cp -r {oomox-aesthetic-light,oomox-aesthetic-dark} /usr/share/icons/", "", False)
    execute("-- Delete unnecessary files",
            "rm -r ~/.icons/{oomox-aesthetic-light,oomox-aesthetic-dark,*.tar.xz}", "", False)
    execute("Refresh font cache", "fc-cache -rv", "", False)


def debian():
    print(f"{GREEN}INSTALLING DOTFILES DEPENDENCIES${NC}")
    execute("Installing i3-Gaps Window Manager", "echo", "debian", False)
    execute("", "sudo apt-get install software-properties-common", "debian", True)
    execute("-- Add PPA repo for i3-gaps",
            "sudo add-apt-repository ppa:kgilmer/speed-ricer", "debian", True)
    execute("-- Update apt", "sudo apt-get update", "debian", True)
    execute("-- Installation",
            'sudo apt-get install i3-gaps-wm i3-gaps-session', "debian", True)
    execute("Installing core dependencies", 'sudo apt install feh git rsync python psmisc wireless-tools alsa-utils brightnessctl nitrogen dunst tint2 gsimplecal rofi lxappearance qt5ct qt5-style-plugins lxpolkit xautolock rxvt-unicode xclip scrot thunar thunar-archive-plugin thunar-media-tags-plugin thunar-volman ffmpegthumbnailer tumbler w3m w3m-img geany viewnior mpv mpd mpc ncmpcpp pavucontrol parcellite neofetch htop imagemagick ffmpeg playerctl xsettingsd', "debian", True)
    execute("Installing oh-my-zsh & plugins",
            "sudo apt install zsh", "debian", True)
    execute("-- Change default shell to zsh for current user",
            "chsh -s `which zsh`", "debian", False)
    execute("-- Plugin install (oh-my-zsh)",
            'sh -c "$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)"', "debian", False)
    execute("-- Plugin install (zsh-syntax-highlighting)",
            'git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting', "debian", False)
    execute("-- Plugin install (zsh-autosuggestions)",
            'git clone https://github.com/zsh-users/zsh-autosuggestions.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions', "debian", False)
    execute('Installing picom compositor', "sudo apt install libxext-dev libxcb1-dev libxcb-damage0-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-render-util0-dev libxcb-render0-dev libxcb-randr0-dev libxcb-composite0-dev libxcb-image0-dev libxcb-present-dev libxcb-xinerama0-dev libxcb-glx0-dev libpixman-1-dev libdbus-1-dev libconfig-dev libgl1-mesa-dev  libpcre2-dev  libevdev-dev uthash-dev libev-dev libx11-xcb-dev ninja-build meson", "debian", True)
    execute("-- Clone picom build source",
            "git clone https://github.com/yshui/picom.git && cd picom/", "debian", False)
    execute("-- Start building",
            "git submodule update --init --recursive", "debian", False)
    execute("-- ", "meson --buildtype=release . build", "debian", False)
    execute("-- ", "ninja -C build", "debian", False)
    execute("-- ", "ninja -C build install", "debian", False)
    execute("Installing psuinfo - Network & CPU Monitor, RAM Usage",
            "echo", "debian", False)
    execute("-- Clone psuinfo from it's repo",
            "git clone https://github.com/nwg-piotr/psuinfo.git && cd psuinfo/", "debian", False)
    execute("-- Copy psuinfo and icon to /usr/bin directory",
            "sudo cp -r {psuinfo,icons} /usr/bin", "debian", False)
    dotfiles()


def arch():
    print(f"{GREEN}INSTALLING DOTFILES DEPENDENCIES${NC}")
    print(f"{RED}Consider install yay AUR helper first if error acquired!{NC}")
    execute("Installing i3-Gaps Window Manager",
            "sudo pacman -S i3-gaps", "arch", True)
    execute("Installing audio",
            "sudo pacman -S alsa-utils pulseaudio pulseaudio-alsa", "arch", True)
    execute("Installing brightness", "yay -S brightnessctl", "arch", True)
    execute("Installing psuinfo - Network & CPU Monitor, RAM Usage",
            "yay -S psuinfo", "arch", True)
    execute("Installing wireless tools",
            "sudo pacman -S wireless_tools", "arch", True)
    execute("Installing git", "sudo pacman -S git", "arch", True)
    execute("Installing other utility (panel, notification, terminal, file manager, etc)",
            "yay -S dunst tint2 gsimplecal rofi feh lxappearance qt5ct qt5-styleplugins lxsession xautolock rxvt-unicode-patched xclip scrot thunar thunar-archive-plugin thunar-media-tags-plugin thunar-volman tumbler w3m geany nano vim viewnior pavucontrol parcellite neofetch htop picom-ibhagwan-git gtk2-perl xfce4-power-manager zsh zsh-completions imagemagick playerctl networkmanager-dmenu", "arch", True)
    execute("Installing oh-my-zsh & plugins", "echo", "arch", False)
    execute("-- Change default shell to zsh for current user",
            "chsh -s /usr/bin/zsh", "arch", False)
    execute("-- Plugin install (oh-my-zsh)",
            'sh -c "$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)"', "arch", False)
    execute("-- Plugin install (zsh-syntax-highlighting)",
            'git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting', "arch", False)
    execute("-- Plugin install (zsh-autosuggestions)",
            'git clone https://github.com/zsh-users/zsh-autosuggestions.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions', "arch", False)
    dotfiles()


options = {
    1: debian,
    2: arch,
}

print(title)
print(selectText)
choice = input("Select : ")

try:
    options[int(choice)]()
except:
    print(f"{RED}Input error")
