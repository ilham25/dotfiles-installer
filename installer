#!/usr/bin/env bash
while true; do

    # DIALOG COLORS
    # export NEWT_COLORS="
    # root=,black
    # shadow=,white
    # textbox=red,black
    # window=,black
    # border=red,black
    # listbox=black,red
    # actlistbox=red,black
    # actsellistbox=red,lightgray
    # button=black,red
    # title=black,red"
    
    MAINDIALOG=$(whiptail --title "Aether Desktop Installer" --menu "Pick an option" 12 80 0 \
        "1." "[Debian based] Dotfiles install" \
        "2." "[Arch based] Dotfiles install - require yay AUR helper    " \
        "3." "oh-my-zsh & plugin install (optional)" \
        "4." "Dotfiles Update" 3>&1 1>&2 2>&3)

    dotfilesInstall(){
        sudo touch &>/dev/null
        {
            sleep 0.5
            echo -e "XXX\n0\nChange Directory to ~/.cache... \nXXX"
                [[ ! -d ~/.cache ]] && mkdir ~/.cache &>/dev/null
                cd ~/.cache &>/dev/null &>/dev/null
            sleep 2
            echo -e "XXX\n0\nChange Directory to ~/.cache... Done.\nXXX"
          
            sleep 0.5
            echo -e "XXX\n0\nCloning Dotfiles Repository... \nXXX"
                if [[ "$1" = "update" ]]; then
                    if [[ -d dotfiles-aether ]]; then
                        cd dotfiles-aether/ &>/dev/null
                        git fetch &>/dev/null
                    else 
                        git clone https://github.com/ilham25/dotfiles-aether &>/dev/null
                        cd dotfiles-aether/ &>/dev/null
                    fi
                else 
                    [[ ! -d dotfiles-aether ]] && git clone https://github.com/ilham25/dotfiles-aether &>/dev/null
                    cd dotfiles-aether/ &>/dev/null
                fi
            sleep 2
            echo -e "XXX\n40\nCloning Dotfiles Repository... Done.\nXXX"
            
            sleep 0.5
            echo -e "XXX\n40\nCopying all dotfiles config... \nXXX"
                cp -r {.*,*} ~/ &>/dev/null
            sleep 2
            echo -e "XXX\n50\nCopying all dotfiles config... Done.\nXXX"
            
            sleep 0.5
            echo -e "XXX\n50\nRemove unnecessary file... \nXXX"
                # Delete unnecessary in home directory
                yes | rm -r ~/{README.md,LICENSE,.git} &>/dev/null
            sleep 2
            echo -e "XXX\n70\nRemove unnecessary file... Done.\nXXX"
                   
            sleep 0.5
            echo -e "XXX\n70\nInstalling icons... \nXXX"
                cd ~/.icons/ &>/dev/null
                tar -Jxvf oomox-aesthetic-light.tar.xz && tar -Jxvf oomox-aesthetic-dark.tar.xz &>/dev/null
                sudo cp -r {oomox-aesthetic-light,oomox-aesthetic-dark} /usr/share/icons/ &>/dev/null
                rm -r ~/.icons/{oomox-aesthetic-light,oomox-aesthetic-dark,*.tar.xz} &>/dev/null
            sleep 2
            echo -e "XXX\n95\nInstalling icons... Done.\nXXX"
            
            sleep 0.5
            echo -e "XXX\n90\nRefreshing font cache... \nXXX"
                fc-cache -rv &>/dev/null
            sleep 2
            echo -e "XXX\n100\nRefreshing font cache... Done.\nXXX"
            sleep 1
        } | whiptail --title "Dotfiles Install/Update" --gauge "Please wait while installing" 6 60 0

    }

    debianDependency(){
        sudo touch &>/dev/null
        {
            sleep 0.5
            echo -e "XXX\n0\nUpdating Package Manager... \nXXX"
            	# Update Repository
	            sudo apt-get update -y &>/dev/null
            sleep 2
            echo -e "XXX\n12\nUpdating Package Manager... Done.\nXXX"
            
            sleep 0.5
            echo -e "XXX\n12\ni3-Gaps Install... \nXXX"
                # i3-Gaps Install
                sudo apt-get install software-properties-common -y &>/dev/null
                sudo add-apt-repository ppa:kgilmer/speed-ricer -y &>/dev/null
                sudo apt-get update -y &>/dev/null
                sudo apt-get install i3-gaps-wm i3-gaps-session -y &>/dev/null
            sleep 2
            echo -e "XXX\n24\ni3-Gaps Install... Done.\nXXX"
            
            sleep 0.5
            echo -e "XXX\n24\nOther Dependency Install... \nXXX"
                # Other Dependency Install
                sudo apt install feh git rsync jq python python3-psutil psmisc wireless-tools alsa-utils brightnessctl nitrogen dunst tint2 gsimplecal rofi lxappearance qt5ct qt5-style-plugins lxpolkit xautolock rxvt-unicode xclip scrot thunar thunar-archive-plugin thunar-media-tags-plugin thunar-volman ffmpegthumbnailer tumbler w3m w3m-img geany viewnior mpv mpd mpc ncmpcpp pavucontrol parcellite neofetch htop imagemagick ffmpeg playerctl xsettingsd -y &>/dev/null
            sleep 2
            echo -e "XXX\n36\nOther Dependency Install... Done.\nXXX"
            
            sleep 0.5
            echo -e "XXX\n36\nPicom Dependency Install... \nXXX"
                # Picom Dependency Install
                sudo apt install build-essential libxext-dev libxcb1-dev libxcb-damage0-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-render-util0-dev libxcb-render0-dev libxcb-randr0-dev libxcb-composite0-dev libxcb-image0-dev libxcb-present-dev libxcb-xinerama0-dev libxcb-glx0-dev libpixman-1-dev libdbus-1-dev libconfig-dev libgl1-mesa-dev  libpcre2-dev  libevdev-dev uthash-dev libev-dev libpcre3-dev libx11-xcb-dev ninja-build meson -y &>/dev/null
            sleep 2
            echo -e "XXX\n48\nPicom Dependency Install... Done.\nXXX"
            
            sleep 0.5
            echo -e "XXX\n48\nPicom Build... \nXXX"
                # Change to /tmp directory
                cd /tmp &>/dev/null
                # Picom build
                [[ ! -d picom ]] && git clone https://github.com/yshui/picom.git &>/dev/null
                cd picom/ &>/dev/null
                git submodule update --init --recursive &>/dev/null
                meson --buildtype=release . build &>/dev/null
                ninja -C build &>/dev/null
                ninja -C build install &>/dev/null
            sleep 2
            echo -e "XXX\n60\nPicom Build... Done.\nXXX"
            
            sleep 0.5
            echo -e "XXX\n60\nPsuinfo Install... \nXXX"
                # Psuinfo Install
                [[ ! -d psuinfo ]] && git clone https://github.com/nwg-piotr/psuinfo.git &>/dev/null
                cd psuinfo/ &>/dev/null
                sudo cp -r {psuinfo,icons} /usr/bin &>/dev/null
            sleep 2
            echo -e "XXX\n72\nPsuinfo Install... Done.\nXXX"
            
            sleep 0.5
            echo -e "XXX\n84\nNetworkManager-dmenu Install... \nXXX"
                # networkmanager-dmenu Install
                [[ ! -d networkmanager-dmenu ]] && git clone https://github.com/firecat53/networkmanager-dmenu.git &>/dev/null
                cd networkmanager-dmenu/ &>/dev/null
                sudo cp networkmanager_dmenu /usr/bin &>/dev/null
            sleep 2
            echo -e "XXX\n96\nNetworkManager-dmenu Install... Done.\nXXX"
            
            sleep 0.5
            echo -e "XXX\n96\nZsh Install... \nXXX"
                # Zsh Install
                sudo apt install zsh -y &>/dev/null
            sleep 2
            echo -e "XXX\n100\nZsh Install... Done.\nXXX"
            sleep 1
        } |whiptail --title "[Debian based] Dotfiles install" --gauge "Please wait while installing" 6 60 0

        # ================== #
        # Dotfiles Install
        dotfilesInstall
    }

    archDependency(){
        sudo touch &>/dev/null
        {
            sleep 0.5
            echo -e "XXX\n0\ni3-Gaps Install... \nXXX"
                # i3-Gaps Install
                sudo pacman -S i3-gaps --noconfirm &>/dev/null
            sleep 2
            echo -e "XXX\n16\ni3-Gaps Install... Done.\nXXX"
            
            sleep 0.5
            echo -e "XXX\n16\nyAudio Utilities Install... \nXXX"
                # Audio utilities Install
                sudo pacman -S alsa-utils pulseaudio pulseaudio-alsa --noconfirm &>/dev/null
            sleep 2
            echo -e "XXX\n32\nyAudio Utilities Install... Done.\nXXX"
            
            sleep 0.5
            echo -e "XXX\n32\nBrigntessctl Install... \nXXX"
                # Brightnessctl Install
                yay -S brightnessctl --noconfirm &>/dev/null
            sleep 2
            echo -e "XXX\n48\nBrigntessctl Install... Done.\nXXX"
            
            sleep 0.5
            echo -e "XXX\n48\nPsuinfo Install... \nXXX"
                # Psuinfo Install
                yay -S psuinfo --noconfirm &>/dev/null
            sleep 2
            echo -e "XXX\n64\nPsuinfo Install... Done.\nXXX"
            
            sleep 0.5
            echo -e "XXX\n64\nWireless Tools Install... \nXXX"
                # Wireless tools Install
                sudo pacman -S wireless_tools --noconfirm &>/dev/null
            sleep 2
            echo -e "XXX\n80\nWireless Tools Install... Done.\nXXX"
            
            sleep 0.5
            echo -e "XXX\n80\nOther Dependency Install... \nXXX"
                # Other Dependency Install
                yay -S dunst tint2 gsimplecal rofi jq feh lxsession lxappearance qt5ct qt5-styleplugins lxsession xautolock rxvt-unicode-patched xclip scrot thunar thunar-archive-plugin thunar-media-tags-plugin thunar-volman tumbler w3m geany nano vim viewnior pavucontrol parcellite neofetch htop picom-git gtk2-perl xfce4-power-manager zsh zsh-completions imagemagick playerctl networkmanager-dmenu xsettingsd --noconfirm &>/dev/null
            sleep 2
            echo -e "XXX\n100\nOther Dependency Install... Done.\nXXX"
            sleep 1
        } | whiptail --title "[Arch based] Dotfiles install" --gauge "Please wait while installing" 12 80 0

        # ================== #
        # Dotfiles Install
        dotfilesInstall
    }

    omzInstall(){
        chsh -s `which zsh`
        sh -c "$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)"
        git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
        git clone https://github.com/zsh-users/zsh-autosuggestions.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
    }

    tes(){
         {
            sleep 0.5
            echo -e "XXX\n0\nyum remove package_0... \nXXX"
            sleep 2
            echo -e "XXX\n12.5\nyum remove package_0... Done.\nXXX"
            sleep 0.5

            echo -e "XXX\n25\nyum remove package_1... \nXXX"
            sleep 2
            echo -e "XXX\n50\nyum remove package_1... Done.\nXXX"
            sleep 0.5

            echo -e "XXX\n50\nyum remove package_2... \nXXX"
            sleep 2
            echo -e "XXX\n75\nyum remove package_2... Done.\nXXX"
            sleep 0.5

            echo -e "XXX\n75\nyum remove package_3... \nXXX"
            sleep 2
            echo -e "XXX\n100\nyum remove package_3... Done.\nXXX"
            sleep 1
        } | whiptail --title "Yum Removal" --gauge "Please wait while installing" 6 60 0
    }

    EXITCODE="$?"
    if [[ $EXITCODE == "0" ]]; then
        if [[ $MAINDIALOG = "1." ]]; then
            debianDependency
        elif [[ $MAINDIALOG = "2." ]]; then
            archDependency
        elif [[ $MAINDIALOG = "3." ]]; then
            omzInstall
        elif [[ $MAINDIALOG = "4." ]]; then
            dotfilesInstall update
        else 
            break
        fi
    fi

done
