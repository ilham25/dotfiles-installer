#!/usr/bin/env bash

MAINDIALOG=$(whiptail --title "Aether Desktop Installer" --menu "Pick an option" 10 60 0 \
    "1." "Debian based dotfiles dependency install" \
    "2." "Arch based dotfiles dependency install" \
    "3." "oh-my-zsh & plugin install" \
    "4." "Dotfiles install" 3>&1 1>&2 2>&3)

debianDependency(){
    # i3-Gaps Install
    sudo add-apt-repository ppa:kgilmer/speed-ricer -y
    sudo apt-get update -y
    sudo apt-get install i3-gaps-wm i3-gaps-session -y
    # Other Dependency Install
    sudo apt install feh git rsync python psmisc wireless-tools alsa-utils brightnessctl nitrogen dunst tint2 gsimplecal rofi lxappearance qt5ct qt5-style-plugins lxpolkit xautolock rxvt-unicode xclip scrot thunar thunar-archive-plugin thunar-media-tags-plugin thunar-volman ffmpegthumbnailer tumbler w3m w3m-img geany viewnior mpv mpd mpc ncmpcpp pavucontrol parcellite neofetch htop imagemagick ffmpeg playerctl xsettingsd -y
    # Picom Dependency Install
    sudo apt install libxext-dev libxcb1-dev libxcb-damage0-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-render-util0-dev libxcb-render0-dev libxcb-randr0-dev libxcb-composite0-dev libxcb-image0-dev libxcb-present-dev libxcb-xinerama0-dev libxcb-glx0-dev libpixman-1-dev libdbus-1-dev libconfig-dev libgl1-mesa-dev  libpcre2-dev  libevdev-dev uthash-dev libev-dev libpcre3-dev libx11-xcb-dev ninja-build meson -y
    # Picom build
    git clone https://github.com/yshui/picom.git && cd picom/
    git submodule update --init --recursive
    meson --buildtype=release . build
    ninja -C build
    ninja -C build install
    # Psuinfo Install
    git clone https://github.com/nwg-piotr/psuinfo.git && cd psuinfo/
    sudo cp -r {psuinfo,icons} /usr/bin
    # Zsh Install
    sudo apt install zsh -y
}

archDependency(){
    # i3-Gaps Install
    sudo pacman -S i3-gaps --noconfirm
    # Audio utilities Install
    sudo pacman -S alsa-utils pulseaudio pulseaudio-alsa --noconfirm
    # Brightnessctl Install
    yay -S brightnessctl --noconfirm
    # Psuinfo Install
    yay -S psuinfo --noconfirm
    # Wireless tools Install
    sudo pacman -S wireless_tools --noconfirm
    # Other Dependency Install
    yay -S dunst tint2 gsimplecal rofi feh lxappearance qt5ct qt5-styleplugins lxsession xautolock rxvt-unicode-patched xclip scrot thunar thunar-archive-plugin thunar-media-tags-plugin thunar-volman tumbler w3m geany nano vim viewnior pavucontrol parcellite neofetch htop picom-git gtk2-perl xfce4-power-manager zsh zsh-completions imagemagick playerctl networkmanager-dmenu xsettingsd --noconfirm
}

omzInstall(){
    chsh -s /usr/bin/zsh
    sh -c "$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)"
    git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
    git clone https://github.com/zsh-users/zsh-autosuggestions.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
}

dotfilesInstall(){
    git clone https://github.com/ilham25/dotfiles-aether
    cd dotfiles-aether/ && cp -r {.*,*} ~/
    cd ~/.icons/
    tar -Jxvf oomox-aesthetic-light.tar.xz && tar -Jxvf oomox-aesthetic-dark.tar.xz
    sudo cp -r {oomox-aesthetic-light,oomox-aesthetic-dark} /usr/share/icons/
    rm -r ~/.icons/{oomox-aesthetic-light,oomox-aesthetic-dark,*.tar.xz}
    fc-cache -rv
}

if [[ $MAINDIALOG = "1." ]]; then
    debianDependency
    ./installer
elif [[ $MAINDIALOG = "2." ]]; then
    archDependency
    ./installer
elif [[ $MAINDIALOG = "3." ]]; then
    omzInstall
    ./installer
elif [[ $MAINDIALOG = "4." ]]; then
    dotfilesInstall
    ./installer
fi

> /dev/null